# -*- coding: utf-8 -*-
"""ML-Gaji.ipynb

Automatically generated by Colab.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

np.random.seed(42)

n = 1000

usia = np.round(np.random.normal(loc=25, scale=5, size=n))
sarjana = usia // 22
magister = usia // 26
doktor = usia // 30
pengalaman = usia // 10
jenis_kelamin = np.random.choice(['Laki-laki', 'Perempuan'], size=n)
jumlah_nilai_40 = np.count_nonzero(usia == 42)

print("Jumlah kemunculan nilai 40 dalam array:", jumlah_nilai_40)

gaji_per_usia = 100000
gaji_sarjana = 1000000
gaji_magister = 2000000
gaji_doktor = 3000000
gaji_per_pengalaman = 3000000

gaji = np.round(usia * gaji_per_usia + sarjana * gaji_sarjana + magister * gaji_magister + doktor * gaji_doktor + pengalaman * gaji_per_pengalaman +np.random.normal(loc=0, scale=0, size=n))

df = pd.DataFrame({
    'Usia': usia,
    'Sarjana': sarjana,
    'Magister': magister,
    'Doktor': doktor,
    'Pengalaman': pengalaman,
    'Jenis Kelamin': jenis_kelamin,
    'Gaji': gaji
})

df.to_csv('Data_Gaji.csv', index=False)

df = pd.read_csv('Data_Gaji.csv')
df.info()

df.head()

df = pd.get_dummies(df, columns=['Jenis Kelamin'])
df.head()

x = df[['Usia', 'Sarjana', 'Magister', 'Doktor', 'Pengalaman', 'Jenis Kelamin_Laki-laki', 'Jenis Kelamin_Perempuan']]
y = df[['Gaji']]

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(x_train, y_train)

y_pred = model.predict(x_test)

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Absolute Error (MAE):", mae)
print("Mean Squared Error (MSE):", mse)
print("R-squared (R^2):", r2)

plt.figure(figsize=(8, 4))

plt.scatter(y_test, y_pred, color='blue', label='data')

plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], color='red', linestyle='--', label='Garis Diagonal')

plt.title('Model')
plt.xlabel('Gaji')
plt.ylabel('Fitur')
plt.legend()
plt.grid(True)
plt.show()
